#

# 1) Take a first look at the data
# Run the next code cell to load in the libraries and dataset you'll use to complete the exercise.

# modules we'll use
import pandas as pd
import numpy as np

# read in all our data
sf_permits = pd.read_csv("../input/building-permit-applications-data/Building_Permits.csv")

# set seed for reproducibility
np.random.seed(0) 

# Use the code cell below to print the first five rows of the sf_permits DataFrame.
# TODO: Your code here!
sf_permits.head()


# 2) How many missing points do we have?
# What percentage of the values in the dataset are missing? Your answer should be a number between 0 and 100. (If 1/4 of the values in the dataset are missing, the answer is 25.)

# TODO: Your code here!
#number of missing values in each column
missing_values_count = sf_permits.isnull().sum()

#total number of missing values
total_cells = np.product(sf_permits.shape)
total_missing = missing_values_count.sum()

#percentage of values in the DataFrame missing
percent_missing = (total_missing/total_cells)*100

print(percent_missing)


# 4) Drop missing values: rows
# If you removed all of the rows of sf_permits with missing values, how many rows are left?

# TODO: Your code here!
sf_permits.dropna()


# 5) Drop missing values: columns
# Now try removing all the columns with empty values.
# - Create a new DataFrame called sf_permits_with_na_dropped that has all of the columns with empty values removed.
# - How many columns were removed from the original sf_permits DataFrame? Use this number to set the value of the dropped_columns variable below.

# TODO: Your code here
#removing all columns with at least one missing value
sf_permits_with_na_dropped = sf_permits.dropna(axis=1)

#amount of data lost
dropped_columns = sf_permits.shape[1]-sf_permits_with_na_dropped.shape[1]

print(dropped_columns)


# 6) Fill in missing values automatically
# Try replacing all the NaN's in the sf_permits data with the one that comes directly after it and then replacing any remaining NaN's with 0. Set the result to a new DataFrame sf_permits_with_na_imputed.

# TODO: Your code here
sf_permits_with_na_imputed = sf_permits.fillna(method='bfill', axis=0).fillna(0)
